# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Homebrew::Service`.
# Please instead update this file by running `bin/tapioca dsl Homebrew::Service`.


class Homebrew::Service
  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def bin(*args, &block); end

  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def etc(*args, &block); end

  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def libexec(*args, &block); end

  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def opt_bin(*args, &block); end

  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def opt_libexec(*args, &block); end

  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def opt_pkgshare(*args, &block); end

  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def opt_prefix(*args, &block); end

  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def opt_sbin(*args, &block); end

  sig { params(args: T.untyped, block: T.untyped).returns(T.untyped) }
  def var(*args, &block); end
end
